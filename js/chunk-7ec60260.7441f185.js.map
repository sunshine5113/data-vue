{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./src/views/screen/config-panel/components/display-api-status.vue?c480","webpack:///./src/views/screen/config-panel/components/field-grid.vue?8dba","webpack:///./src/views/screen/config-panel/data-center-panel/source-drawer.vue?94a7","webpack:///./src/views/screen/config-panel/data-center-panel/source-panel.vue?4fe4","webpack:///./src/views/screen/config-panel/data-center-panel/source-panel.vue","webpack:///./src/views/screen/config-panel/components/display-api-status.vue","webpack:///./src/views/screen/config-panel/components/display-api-status.vue?4c22","webpack:///./src/views/screen/config-panel/components/display-api-status.vue?3b7b","webpack:///./src/views/screen/config-panel/data-center-panel/source-drawer.vue","webpack:///./src/views/screen/config-panel/components/field-grid.vue","webpack:///./src/views/screen/config-panel/components/field-grid.vue?d1bf","webpack:///./src/views/screen/config-panel/components/field-grid.vue?1fe5","webpack:///./src/views/screen/config-panel/data-center-panel/source-drawer.vue?145f","webpack:///./src/views/screen/config-panel/data-center-panel/source-drawer.vue?694d","webpack:///./src/views/screen/config-panel/data-center-panel/source-panel.vue?2a7b","webpack:///./src/views/screen/config-panel/data-center-panel/source-panel.vue?a81e"],"names":["$","$values","values","target","stat","O","class","toggle","collapse","apiConfig","description","status","totalStatus","success-text","fields","fc","fn","key","content","placement","effect","model-value","map","placeholder","$event","fieldsStatus","optional","useAutoUpdate","autoUpdate","type","disabled","datasources","apiDataConfig","size","openSourceDrawer","language","read-only","code","datav_data","height","full-screen-title","visible","ref","apiStatus","loading","success","completed","statusText","name","props","String","default","incomplete","loadingText","successText","failedText","completedText","incompleteText","Boolean","setup","failed","render","__scopeId","custom-class","title","popper-class","changeSource","v","k","label","value","apiType","static","config","data","updateData","api","resData","Object","components","FieldGrid","open","com","apiName","val","undefined","dataMap","id","DisplayApiStatus","SourceDrawer","required","activeName","sourceDrawerRef","apis","apiData","comData","comFields","fieldStatusMap","list","includes","changePanel"],"mappings":"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","file":"js/chunk-7ec60260.7441f185.js","sourcesContent":["var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./display-api-status.vue?vue&type=style&index=0&id=1a65afef&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./field-grid.vue?vue&type=style&index=0&id=1d6f7865&lang=scss&scoped=true\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./source-drawer.vue?vue&type=style&index=0&id=d312cc34&lang=scss\"","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./source-panel.vue?vue&type=style&index=0&id=1315d573&lang=scss&scoped=true\"","<template>\n  <div\n    :class=\"['api-editor', {\n      '--disable-fold': !collapse,\n      '--fold': collapse && visible\n    }]\"\n  >\n    <div class=\"api-editor-title\">\n      <div class=\"api-desc ellipsis2\" @click=\"toggle\">\n        <i v-if=\"collapse\" class=\"el-icon-arrow-right api-fold-icon\"></i>\n        {{ apiConfig.description || '数据接口' }}\n      </div>\n      <div class=\"api-status success\">\n        <display-api-status :status=\"totalStatus\" success-text=\"配置完成\" />\n      </div>\n    </div>\n    <div v-show=\"visible\" class=\"attr-source-wp\">\n      <div class=\"data-attr-table-container\">\n        <table class=\"data-attr-table\">\n          <thead class=\"table-head\">\n            <tr class=\"table-head-row\">\n              <th class=\"th-item column-item attr-name\">\n                字段\n              </th>\n              <th class=\"th-item column-item attr-value\">\n                映射\n              </th>\n              <th class=\"th-item column-item attr-status\">\n                状态\n              </th>\n            </tr>\n          </thead>\n          <tbody class=\"table-body\">\n            <tr\n              v-for=\"(fc, fn) in apiConfig.fields\"\n              :key=\"fn\"\n              class=\"table-body-row\"\n            >\n              <td class=\"column-item attr-name\">\n                <el-tooltip\n                  :content=\"fc.description\"\n                  placement=\"left\"\n                  effect=\"blue\"\n                >\n                  <span class=\"ellipsis2\">{{ fn }}</span>\n                </el-tooltip>\n              </td>\n              <td class=\"column-item attr-value\">\n                <g-input\n                  :model-value=\"fc.map\"\n                  placeholder=\"可自定义\"\n                  class=\"attr-input\"\n                  @change=\"fc.map = $event\"\n                />\n              </td>\n              <td class=\"column-item attr-status\">\n                <display-api-status :status=\"fieldsStatus[fn]\" :optional=\"fc.optional\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"data-source\">\n        <div class=\"data-result-title\">\n          数据响应结果\n        </div>\n        <div class=\"auto-update-config\">\n          <el-checkbox v-model=\"apiConfig.useAutoUpdate\" class=\"auto-update-checkbox\">\n            自动更新选项\n          </el-checkbox>\n          <g-input\n            :model-value=\"apiConfig.autoUpdate\"\n            type=\"number\"\n            :disabled=\"!apiConfig.useAutoUpdate\"\n            class=\"update-interval-input\"\n            @change=\"apiConfig.autoUpdate = $event\"\n          />\n          秒一次\n        </div>\n        <div class=\"data-flow-wp\">\n          <div class=\"ds-line\">\n            <div class=\"ds-title\">\n              <span class=\"ds-title-text\">数据源</span>\n              <span class=\"ds-type-text\">{{ datasources[apiDataConfig.type] }}</span>\n            </div>\n            <el-button\n              size=\"mini\"\n              class=\"ds-action-btn\"\n              @click=\"openSourceDrawer\"\n            >\n              配置数据源\n            </el-button>\n          </div>\n          <div class=\"ds-line mt5\">\n            <span>数据响应结果 ( 只读 ) </span>\n            <el-tooltip content=\"刷新数据\" placement=\"left\" effect=\"blue\">\n              <i class=\"el-icon-refresh refresh-btn\"></i>\n            </el-tooltip>\n          </div>\n          <div class=\"ds-dots\">\n            <span class=\"ds-dot\" :class=\"[totalStatus === 'completed' ? 'active' : 'error']\"></span>\n            <span class=\"ds-dot\"></span>\n            <span class=\"ds-dot\"></span>\n          </div>\n        </div>\n        <div class=\"data-response\">\n          <g-monaco-editor\n            language=\"json\"\n            :read-only=\"true\"\n            :code=\"datav_data\"\n            :height=\"250\"\n            full-screen-title=\"数据响应结果\"\n          />\n        </div>\n      </div>\n    </div>\n    <source-drawer ref=\"sourceDrawerRef\" />\n  </div>\n</template>\n\n<script lang='ts'>\nimport { defineComponent, ref, computed, ComputedRef, inject, provide } from 'vue'\nimport { DatavComponent } from '@/components/datav-component'\nimport { ApiConfig, ApiDataConfig, FieldStatus, createDataSources } from '@/components/data-source'\nimport { ApiStatus } from '@/utils/enums/data-source'\nimport { ApiModule } from '@/store/modules/api'\nimport DisplayApiStatus from '../components/display-api-status.vue'\nimport SourceDrawer from './source-drawer.vue'\n\nexport default defineComponent({\n  name: 'SourcePanel',\n  components: {\n    DisplayApiStatus,\n    SourceDrawer,\n  },\n  props: {\n    apiName: {\n      type: String,\n      required: true,\n    },\n    activeName: String,\n    collapse: Boolean,\n  },\n  setup(props) {\n    const visible = computed(() => props.apiName === props.activeName)\n    const sourceDrawerRef = ref(null)\n    const datasources = createDataSources()\n\n    const com = inject('com') as ComputedRef<DatavComponent>\n    const apiConfig = computed((): ApiConfig => com.value.apis[props.apiName])\n    const apiDataConfig = computed((): ApiDataConfig => com.value.apiData[props.apiName])\n\n    provide('apiConfig', apiConfig)\n    provide('apiDataConfig', apiDataConfig)\n    provide('apiName', props.apiName)\n\n    const datav_data = computed(() => {\n      const comData = ApiModule.dataMap[com.value.id]\n      return comData ? comData[props.apiName] : ''\n    })\n\n    const fieldsStatus = computed(() => {\n      const comFields = ApiModule.fieldStatusMap[com.value.id]\n      return comFields ? comFields[props.apiName] : {}\n    })\n\n    const totalStatus = computed(() => {\n      const list = Object.values(fieldsStatus.value)\n      if (list.includes(FieldStatus.loading)) {\n        return ApiStatus.loading\n      }\n\n      if (list.includes(FieldStatus.failed)) {\n        return ApiStatus.incomplete\n      }\n\n      return ApiStatus.completed\n    })\n\n    const changePanel = inject('changePanel') as Function\n\n    const toggle = () => {\n      if (props.collapse) {\n        changePanel(props.apiName)\n      }\n    }\n\n    const openSourceDrawer = () => {\n      sourceDrawerRef.value?.open()\n    }\n\n    return {\n      visible,\n      sourceDrawerRef,\n      datasources,\n      com,\n      apiConfig,\n      apiDataConfig,\n      fieldsStatus,\n      totalStatus,\n      datav_data,\n      toggle,\n      openSourceDrawer,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n@import './source-panel.scss';\n</style>\n","<template>\n  <div>\n    <template v-if=\"status === apiStatus.loading\">\n      <i class=\"status-icon validating\"></i>\n      <i class=\"status-icon validating\"></i>\n      <i class=\"status-icon validating\"></i>\n    </template>\n    <template v-else-if=\"status === apiStatus.success || status === apiStatus.completed\">\n      <i class=\"status-icon\" :class=\"`--${status}`\"></i>\n    </template>\n    <template v-else-if=\"optional\">\n      <i class=\"status-icon --success\"></i>\n    </template>\n    <template v-else>\n      <i class=\"status-icon\" :class=\"`--${status}`\"></i>\n    </template>\n    <span class=\"status-text\">\n      {{ statusText }}\n    </span>\n  </div>\n</template>\n\n<script lang='ts'>\nimport { defineComponent, computed, PropType } from 'vue'\nimport { ApiStatus } from '@/utils/enums/data-source'\n\nexport default defineComponent({\n  name: 'DisplayApiStatus',\n  props: {\n    status: {\n      type: String as PropType<ApiStatus>,\n      default: ApiStatus.incomplete,\n    },\n    loadingText: {\n      type: String,\n      default: '匹配中',\n    },\n    successText: {\n      type: String,\n      default: '匹配成功',\n    },\n    failedText: {\n      type: String,\n      default: '未找到字段',\n    },\n    completedText: {\n      type: String,\n      default: '配置完成',\n    },\n    incompleteText: {\n      type: String,\n      default: '配置未完成',\n    },\n    optional: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    const statusText = computed(() => {\n      if (props.status === ApiStatus.loading) {\n        return props.loadingText\n      }\n\n      if (props.status === ApiStatus.success) {\n        return props.successText\n      }\n\n      if (props.status === ApiStatus.completed) {\n        return props.completedText\n      }\n\n      if (props.optional) {\n        return '可选'\n      }\n\n      if (props.status === ApiStatus.failed) {\n        return props.failedText\n      }\n\n      if (props.status === ApiStatus.incomplete) {\n        return props.incompleteText\n      }\n\n      return props.status\n    })\n\n    return {\n      apiStatus: ApiStatus,\n      statusText,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n@import '~@/styles/themes/var';\n@import '~@/styles/loading';\n\n.status-icon {\n  @include square-loading-icon();\n\n  &.--failed,\n  &.--incomplete {\n    background: $warn-main;\n  }\n}\n\n.status-text {\n  color: $font-color;\n}\n</style>\n","\nimport { defineComponent, computed, PropType } from 'vue'\nimport { ApiStatus } from '@/utils/enums/data-source'\n\nexport default defineComponent({\n  name: 'DisplayApiStatus',\n  props: {\n    status: {\n      type: String as PropType<ApiStatus>,\n      default: ApiStatus.incomplete,\n    },\n    loadingText: {\n      type: String,\n      default: '匹配中',\n    },\n    successText: {\n      type: String,\n      default: '匹配成功',\n    },\n    failedText: {\n      type: String,\n      default: '未找到字段',\n    },\n    completedText: {\n      type: String,\n      default: '配置完成',\n    },\n    incompleteText: {\n      type: String,\n      default: '配置未完成',\n    },\n    optional: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    const statusText = computed(() => {\n      if (props.status === ApiStatus.loading) {\n        return props.loadingText\n      }\n\n      if (props.status === ApiStatus.success) {\n        return props.successText\n      }\n\n      if (props.status === ApiStatus.completed) {\n        return props.completedText\n      }\n\n      if (props.optional) {\n        return '可选'\n      }\n\n      if (props.status === ApiStatus.failed) {\n        return props.failedText\n      }\n\n      if (props.status === ApiStatus.incomplete) {\n        return props.incompleteText\n      }\n\n      return props.status\n    })\n\n    return {\n      apiStatus: ApiStatus,\n      statusText,\n    }\n  },\n})\n","import { render } from \"./display-api-status.vue?vue&type=template&id=1a65afef&scoped=true\"\nimport script from \"./display-api-status.vue?vue&type=script&lang=ts\"\nexport * from \"./display-api-status.vue?vue&type=script&lang=ts\"\n\nimport \"./display-api-status.vue?vue&type=style&index=0&id=1a65afef&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1a65afef\"\n\nexport default script","<template>\n  <el-drawer\n    v-model=\"visible\"\n    custom-class=\"source-drawer\"\n    size=\"500px\"\n  >\n    <template #title>\n      <p class=\"source-drawer-title\">设置数据源</p>\n    </template>\n    <template v-if=\"visible\">\n      <div class=\"step-title\">数据源</div>\n      <div class=\"datasource-selector\">\n        <label class=\"datasource-selector-title\">数据源类型</label>\n        <div class=\"datasource-select-wp\">\n          <el-select\n            v-model=\"apiDataConfig.type\"\n            size=\"mini\"\n            class=\"datasource-select\"\n            popper-class=\"datasource-select-option\"\n            @change=\"changeSource\"\n          >\n            <el-option\n              v-for=\"(v, k) in datasources\"\n              :key=\"k\"\n              :label=\"v\"\n              :value=\"k\"\n            />\n          </el-select>\n        </div>\n      </div>\n      <div v-if=\"apiDataConfig.type === apiType.static\" class=\"ds-wrapper ds-static\">\n        <g-monaco-editor\n          :key=\"apiType.static\"\n          language=\"json\"\n          :code=\"apiDataConfig.config.data\"\n          @blur=\"updateData\"\n        />\n      </div>\n      <div v-else-if=\"apiDataConfig.type === apiType.api\" class=\"ds-wrapper ds-api\">\n        <g-monaco-editor\n          :key=\"apiType.api\"\n          language=\"plaintext\"\n          :code=\"apiDataConfig.config.api\"\n          @blur=\"updateData\"\n        />\n      </div>\n      <div class=\"step-title\">\n        <el-checkbox\n          v-model=\"apiConfig.useAutoUpdate\"\n          class=\"use-filter-btn\"\n        />\n        <span class=\"use-filter-text\">数据过滤器</span>\n        <span class=\"tutorial-popup\">教程</span>\n      </div>\n      <field-grid :fields=\"apiConfig.fields\" />\n      <div class=\"step-title\">\n        <span>数据响应结果</span>\n        <i class=\"el-icon-refresh refresh-btn\"></i>\n      </div>\n      <div class=\"data-response\">\n        <g-monaco-editor\n          language=\"json\"\n          :read-only=\"true\"\n          :code=\"resData\"\n        />\n      </div>\n    </template>\n  </el-drawer>\n</template>\n\n<script lang='ts'>\nimport { defineComponent, ref, ComputedRef, inject, computed } from 'vue'\nimport { DatavComponent } from '@/components/datav-component'\nimport { ApiType } from '@/utils/enums/data-source'\nimport { createDataSources, ApiConfig, ApiDataConfig } from '@/components/data-source'\nimport { ApiModule } from '@/store/modules/api'\nimport FieldGrid from '../components/field-grid.vue'\n\nexport default defineComponent({\n  name: 'SourceDrawer',\n  components: {\n    FieldGrid,\n  },\n  setup() {\n    const visible = ref(false)\n    const apiType = ApiType\n    const datasources = createDataSources()\n\n    const open = () => {\n      visible.value = true\n    }\n\n    const com = inject('com') as ComputedRef<DatavComponent>\n    const apiConfig = inject('apiConfig') as ComputedRef<ApiConfig>\n    const apiDataConfig = inject('apiDataConfig') as ComputedRef<ApiDataConfig>\n    const apiName = inject('apiName') as string\n\n    const changeSource = (val: string) => {\n      if (val !== apiType.static && apiDataConfig.value.config[val] === undefined) {\n        apiDataConfig.value.config[val] = ''\n      }\n    }\n\n    const updateData = (data: any) => {\n      switch (apiDataConfig.value.type) {\n        case apiType.static:\n          apiDataConfig.value.config.data = data.value\n          break\n        case apiType.api:\n          apiDataConfig.value.config.api = data.value\n          break\n        default:\n          break\n      }\n    }\n\n    const resData = computed(() => {\n      const data = ApiModule.dataMap[com.value.id]\n      return data ? data[apiName] : ''\n    })\n\n    return {\n      visible,\n      apiType,\n      datasources,\n      com,\n      apiConfig,\n      apiDataConfig,\n      resData,\n      open,\n      changeSource,\n      updateData,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import './source-drawer.scss';\n</style>\n","<template>\n  <div v-if=\"fields\" class=\"field-wp\">\n    <div class=\"field-info\">数据相应结果应为列表，列表元素包含如下字段</div>\n    <div class=\"field-grid\">\n      <div class=\"field-item field-title\">字段</div>\n      <div class=\"field-item field-title\">映射</div>\n      <div class=\"field-item field-title\">说明</div>\n      <template v-for=\"(fc, fn) in fields\" :key=\"fn\">\n        <div class=\"field-item\">{{ fn }}</div>\n        <div class=\"field-item\">{{ fc.map || '-' }}</div>\n        <div class=\"field-item\">{{ fc.description || '-' }}</div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script lang='ts'>\nimport { defineComponent, PropType } from 'vue'\nimport { FieldConfig } from '@/components/data-source'\n\nexport default defineComponent({\n  name: 'FieldGrid',\n  props: {\n    fields: {\n      type: Object as PropType<Record<string, FieldConfig>>,\n    },\n  },\n})\n</script>\n\n<style lang=\"scss\" scoped>\n$border: 1px solid #444546;\n\n.field-wp {\n  margin-top: 20px;\n}\n\n.field-grid {\n  display: grid;\n  margin-top: 10px;\n  border-bottom: $border;\n  border-left: $border;\n  grid-template-columns: 1fr 1fr 2fr;\n\n  .field-item {\n    padding: 6px;\n    border-top: $border;\n    border-right: $border;\n  }\n\n  .field-title {\n    background: rgba(255, 255, 255, 0.03);\n  }\n}\n</style>\n","\nimport { defineComponent, PropType } from 'vue'\nimport { FieldConfig } from '@/components/data-source'\n\nexport default defineComponent({\n  name: 'FieldGrid',\n  props: {\n    fields: {\n      type: Object as PropType<Record<string, FieldConfig>>,\n    },\n  },\n})\n","import { render } from \"./field-grid.vue?vue&type=template&id=1d6f7865&scoped=true\"\nimport script from \"./field-grid.vue?vue&type=script&lang=ts\"\nexport * from \"./field-grid.vue?vue&type=script&lang=ts\"\n\nimport \"./field-grid.vue?vue&type=style&index=0&id=1d6f7865&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1d6f7865\"\n\nexport default script","\nimport { defineComponent, ref, ComputedRef, inject, computed } from 'vue'\nimport { DatavComponent } from '@/components/datav-component'\nimport { ApiType } from '@/utils/enums/data-source'\nimport { createDataSources, ApiConfig, ApiDataConfig } from '@/components/data-source'\nimport { ApiModule } from '@/store/modules/api'\nimport FieldGrid from '../components/field-grid.vue'\n\nexport default defineComponent({\n  name: 'SourceDrawer',\n  components: {\n    FieldGrid,\n  },\n  setup() {\n    const visible = ref(false)\n    const apiType = ApiType\n    const datasources = createDataSources()\n\n    const open = () => {\n      visible.value = true\n    }\n\n    const com = inject('com') as ComputedRef<DatavComponent>\n    const apiConfig = inject('apiConfig') as ComputedRef<ApiConfig>\n    const apiDataConfig = inject('apiDataConfig') as ComputedRef<ApiDataConfig>\n    const apiName = inject('apiName') as string\n\n    const changeSource = (val: string) => {\n      if (val !== apiType.static && apiDataConfig.value.config[val] === undefined) {\n        apiDataConfig.value.config[val] = ''\n      }\n    }\n\n    const updateData = (data: any) => {\n      switch (apiDataConfig.value.type) {\n        case apiType.static:\n          apiDataConfig.value.config.data = data.value\n          break\n        case apiType.api:\n          apiDataConfig.value.config.api = data.value\n          break\n        default:\n          break\n      }\n    }\n\n    const resData = computed(() => {\n      const data = ApiModule.dataMap[com.value.id]\n      return data ? data[apiName] : ''\n    })\n\n    return {\n      visible,\n      apiType,\n      datasources,\n      com,\n      apiConfig,\n      apiDataConfig,\n      resData,\n      open,\n      changeSource,\n      updateData,\n    }\n  },\n})\n","import { render } from \"./source-drawer.vue?vue&type=template&id=d312cc34\"\nimport script from \"./source-drawer.vue?vue&type=script&lang=ts\"\nexport * from \"./source-drawer.vue?vue&type=script&lang=ts\"\n\nimport \"./source-drawer.vue?vue&type=style&index=0&id=d312cc34&lang=scss\"\nscript.render = render\n\nexport default script","\nimport { defineComponent, ref, computed, ComputedRef, inject, provide } from 'vue'\nimport { DatavComponent } from '@/components/datav-component'\nimport { ApiConfig, ApiDataConfig, FieldStatus, createDataSources } from '@/components/data-source'\nimport { ApiStatus } from '@/utils/enums/data-source'\nimport { ApiModule } from '@/store/modules/api'\nimport DisplayApiStatus from '../components/display-api-status.vue'\nimport SourceDrawer from './source-drawer.vue'\n\nexport default defineComponent({\n  name: 'SourcePanel',\n  components: {\n    DisplayApiStatus,\n    SourceDrawer,\n  },\n  props: {\n    apiName: {\n      type: String,\n      required: true,\n    },\n    activeName: String,\n    collapse: Boolean,\n  },\n  setup(props) {\n    const visible = computed(() => props.apiName === props.activeName)\n    const sourceDrawerRef = ref(null)\n    const datasources = createDataSources()\n\n    const com = inject('com') as ComputedRef<DatavComponent>\n    const apiConfig = computed((): ApiConfig => com.value.apis[props.apiName])\n    const apiDataConfig = computed((): ApiDataConfig => com.value.apiData[props.apiName])\n\n    provide('apiConfig', apiConfig)\n    provide('apiDataConfig', apiDataConfig)\n    provide('apiName', props.apiName)\n\n    const datav_data = computed(() => {\n      const comData = ApiModule.dataMap[com.value.id]\n      return comData ? comData[props.apiName] : ''\n    })\n\n    const fieldsStatus = computed(() => {\n      const comFields = ApiModule.fieldStatusMap[com.value.id]\n      return comFields ? comFields[props.apiName] : {}\n    })\n\n    const totalStatus = computed(() => {\n      const list = Object.values(fieldsStatus.value)\n      if (list.includes(FieldStatus.loading)) {\n        return ApiStatus.loading\n      }\n\n      if (list.includes(FieldStatus.failed)) {\n        return ApiStatus.incomplete\n      }\n\n      return ApiStatus.completed\n    })\n\n    const changePanel = inject('changePanel') as Function\n\n    const toggle = () => {\n      if (props.collapse) {\n        changePanel(props.apiName)\n      }\n    }\n\n    const openSourceDrawer = () => {\n      sourceDrawerRef.value?.open()\n    }\n\n    return {\n      visible,\n      sourceDrawerRef,\n      datasources,\n      com,\n      apiConfig,\n      apiDataConfig,\n      fieldsStatus,\n      totalStatus,\n      datav_data,\n      toggle,\n      openSourceDrawer,\n    }\n  },\n})\n","import { render } from \"./source-panel.vue?vue&type=template&id=1315d573&scoped=true\"\nimport script from \"./source-panel.vue?vue&type=script&lang=ts\"\nexport * from \"./source-panel.vue?vue&type=script&lang=ts\"\n\nimport \"./source-panel.vue?vue&type=style&index=0&id=1315d573&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1315d573\"\n\nexport default script"],"sourceRoot":""}